// Test 1 - Arithmetic test
	// test 64 + .ip, (add)
0x00	0001000000010000	// ldi .op 64
0x01	0000000001000000
0x02	1100001111010000	// add .ip .op

	// test 64 - .ip, (sub)
0x03	0001000000010000	// ldi .op 64
0x04	0000000001000000
0x05	1101001111010000	// sub .ip .op

	// test 64 & .ip, (and)
0x06	0001000000010000	// ldi .op 64
0x07	0000000001000000
0x08	1110001111010000	// sub .ip .op

	// test 64 | .ip, (orr)
0x09	0001000000010000	// ldi .op 64
0x0A	0000000001000000
0x0B	1111001111010000	// orr .ip .op
	
	// test .ip < 64, (slt, cop)
0x0C	0001000000010000	// ldi .op 64
0x0D	0000000001000000
0x0E	1010001111010000	// slt .ip .op
0x0F	1000111001010000	// cop .cr .op

	// test .ip << 2,-2, (sft)
0x10	0111001111010000	// sft .ip .op 2
0x11	0000000000000010
0x12	0111001111010000	// sft .ip .op -2
0x13	1111111111111110

0x14	0011000000000000	//bop 20 (end of program)
0x15	0000000000010100