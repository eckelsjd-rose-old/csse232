// Test 4 - test relPrime algorithm

relP:	0x00	0001 000000 010000	ldi .op 2
	0x01	0000 000000 000010	
	0x02	0001 000000 000001	ldi .f1 1
	0x03	0000 000000 000001	
loop:	0x04	1000 001111 101101	cop .ip .a0
	0x05	1000 010000 101110	cop .op .a1
	0x06	0100 000000 000000	cal gcd
	0x07	0000 000000 001111	
	0x08	0101 111010 000001	beq .v0 .f1 end
	0x09	0000 000000 001101	
	0x0A	1100 000001 010000	add .f1 .op
	0x0B	0011 000000 000000	bop loop
	0x0C	0000 000000 000100	
end:	0x0D	0011 000000 000000	bop 32
	0x0E	0000 000000 100000	
gcd:	0x0F	0110 101101 111111	bne .a0 .z0 cont
	0x10	0000 000000 010011	
	0x11	1000 101110 111010	cop .a1 .v0
	0x12	1011 000000 000000	ret
cont:	0x13	0101 101110 101101	beq .a1 .a0 done
	0x14	0000 000000 011110	
	0x15	1010 101110 101101	slt .a1 .a0
	0x16	0101 111001 111111	beq .cr .z0 else
	0x17	0000 000000 011011	
	0x18	1101 101110 101101	sub .a1 .a0
	0x19	0011 000000 000000	bop cont
	0x1A	0000 000000 010011	
else:	0x1B	1101 101101 101110	sub .a0 .a1
	0x1C	0011 000000 000000	bop cont
	0x1D	0000 000000 010011	
done:	0x1E	1000 101101 111010	cop .a0 .v0
	0x1F	1011 000000 000000	ret
	0x20	0011 000000 000000	bop 32 (end of program)
	0x21	0000 000000 100000